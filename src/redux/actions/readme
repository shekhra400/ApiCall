Include axios and make api call from it****
combine reducers****
use constants
use utils for common functions
all main pages of the project are inside container/pages folder like loginPage, registerPage.****
structure improved after discussion with shekhar
import lodash and use (used for commonly used operations such as sorting,searching)
seperate conponent and container
use axios api call with success and error actions (dispatch(addUserSuccess(loadedUsers)) and dispatch(addUserError(loadedUsers))))
write nothing in app.js
always create 3 actions for each event like 
    USER_LOGIN_REQUEST(for loading),
    USER_LOGIN_SUCCESS(for success message),
    USER_LOGIN_ERROR (for error popups)
each functionality must be in seperate component folders like 
    components/contacts/contactPage.js , 
    components/contacts/contactPage.module.css
    components/Footer/footer.js
    components/Footer/footer.module.css

merge login reducer and actions with user reducer and actions**
never call a container from a component


For login
create page layout with header and footer component 
creat link in the home page header which redirects to login page
if user is logged in show logout button instead of login n
implement routing such as
/user/login (unprotected)
/user/account (protected route only for logged in user)
